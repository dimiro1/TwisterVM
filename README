TwisterVM
=========

Copyright (C) 2009 Claudemiro Alves Feitosa Neto

A Virtual Machine
  TwisterVM é uma maquina virtual de registradores que pretende ser simples
  o suficiente para qualquer aluno de graduação entender.

  Poderá ser usada em cursos de compiladores, introdução a computação etc.

Desempenho
  A vm vem equipada com duas formas de dispatch de instruções, uma rapida e uma lenta.

  A lenta.
  Utiliza um grande switch para fazer dispatch.

  A rapida.
  Utiliza gotos computados.
  goto computado é um recurso de alguns compiladores que trata labels como
  data que pode ser armazenado em ponteiros void*.

  Cada opcode é apenas um label, armazenado em um enorme vetor.
  executar uma instrução é apenas usar o indice do opcode e executar o label, realizando o goto.

  Isto é incrivelmente mais rápido que usar o grande switch.

  Obs: compiled goto não é um recurso a ser usado caso deseja-se atingir o nivel ansi/iso c

  A forma rapida só esta disponivel em alguns compiladores, vem ativada por padrão para o gcc.

Tipos Primitivos
  Possui 2 tipos primitivos
  * Numero - inteiro, ponto flutuante
  * String - sequencia de caracteres

Instruções

ARITMETICOS
  OPCODE      Descrição
  abs_n       calcula valor absoluto de num
  acos_n      calcula acosseno de num
  add_n       soma dois numeros
  asin_n      calcula aseno de num
  atan_n      calcula atangente de num
  ceil_n      arredonda para baixo
  cos_n       calcula cosseno
  dec_n       decrementa
  div_n       divide
  floor_n     arredonda para cima
  inc_n       incrementa
  log_n       calcula logaritmo na base 10
  mod_n       resto da divisão
  mult_n      multiplica
  neg_n       nega
  pow_n       exponenciação
  sin_n       calcula seno
  sqrt_n      raiz quadrada
  sub_n       subtrai
  tan_n       calcula tangente
  rand_n      numero aleatorio entre 0 e 32767

GENERICOS
  OPCODE      Descrição
  goto        desvio incondicional
  halt        finaliza vm (necessario em todos os programas)
  nop         sem operação
  system_s    interage com o SO
  getenv_s    captura variavel de ambiente

IO
  OPCODE      Descrição
  input_n     entrada de numero
  input_s     entrada de string
  print_n     saida de numero sem quebra
  print_s     saida de string sem quebra
  put_n       saida de numero com quebra
  put_s       saida de string com quebra

REGISTRADORES
  OPCODE      Descrição
  mov_n       move valor numerico entre registradores
  mov_s       move valor string entre registradores
  store_n     salva um numero
  store_s     salva uma string

STRINGS
  OPCODE      Descrição
  concat_s    concatena strings
  charat_s    caractere em dada posição

Desvios incondicionais
  OPCODE      Descrição
  *VERDADEIRO
  lt_s        less than (menor que) string
  gt_s        greater than (maior que) string
  lte_s       less than or equal (menor igual que) string
  gte_s       greater than or equal (maior igual que) string
  eq_s        equal (igual) string
  lt_n        less than (menor que) numerico
  gt_n		  greater than (maior que) numerico
  lte_n		  less than or equal (menor igual que) numerico
  gte_n		  greater than or equal (maior igual que) numerico
  eq_n		  equal (igual) numerico

  *FALSO
  not_lt_s
  not_gt_s
  not_lte_s
  not_gte_s
  not_eq_s
  not_lt_n
  not_gt_n
  not_lte_n
  not_gte_n
  not_eq_n
  zero_n
  not_zero_n


O arquivo assembly
  Options é o local onde pode ser colocado o nome de saida, quantidade de instruções
  syntax
  .options
	 {options_list}
  .end

  exemplo:
  Faz com que o nome do arquivo compilado seja hello_world.twc
  .options
	 .name hello_world
  .end

  Código
  Sessão de Código
  .main
    {code_list}
  .end

  Ver pasta de exemplos para detalhes.

Copyright

Esse pacote é distribuído nos termos da GNU GENERAL PUBLIC LICENSE v3
(ver arquivo COPYRIGHT para maiores detalhes)
