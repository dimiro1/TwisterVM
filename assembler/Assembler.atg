#include "AsmGen.h"
#include <ctype.h>

COMPILER Assembler

	AsmGen *gen;

	CHARACTERS
		letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".
		digit = "0123456789".
		cr  = '\r'.
		tab = '\t'.
		lf = '\n'.
		blank = " ".

	TOKENS
		ID = letter {letter | digit | "-" | "_"}.
		NUM = digit {digit} ["." digit {digit}] [("e"|"E" ["-"|"+"]) digit {digit}].

	COMMENTS FROM ";" TO lf

	IGNORE cr + tab + lf

	PRODUCTIONS
      Assembler = OptionsSection CodeSection.
		OptionsSection = ".options" 
											  {OptionsOptionsSection}
									   ".end".
									   
		OptionsOptionsSection = "@size" NUM 
													     (. gen->alloc_code_section (atoi (coco_string_create_char (t->val))); .)
													| "@name" ID
															 (. gen->set_output_file_name (coco_string_create_char (t->val)); .)
													.
													
		/*StaticSection = ".static"
												{StaticOptions}
										".end".*/
										
		/* StaticOptions = @string ID STRING | @number ID NUM.*/

		CodeSection = ".code" {CodeInstruction} ".end".
		CodeInstruction = Push | Add | Sub | Mult | Div | Pop
						| Print | Puts | Nop | Reset | Getop | Goto
						| Halt | Label | Discard
						.
		Add = "add" (. gen->emit_add (); .).
		Div = "div" (. gen->emit_div (); .).
		Discard = "discard" (. gen->emit_discard (); .).
		Getop = "getop" (. gen->emit_getop (); .).
		Goto = "goto" NUM (. gen->emit_goto (atof (coco_string_create_char (t->val))); .).
		Halt = "halt" (. gen->emit_halt (); .).
		Label = "label" ID.
		Mult = "mult" (. gen->emit_mult (); .).
		Nop = "nop" (. gen->emit_nop (); .).
		Pop = "pop" (. gen->emit_pop (); .).
		Print = "print" (. gen->emit_print (); .).
		Push = "push" NUM (. gen->emit_push (atof (coco_string_create_char (t->val))); .).
		Puts = "puts" (. gen->emit_puts (); .).
		Reset = "reset" (. gen->emit_reset (); .).
		Sub = "sub" (. gen->emit_sub (); .).
END Assembler.
